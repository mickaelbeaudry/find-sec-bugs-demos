apply plugin: 'com.android.application'
apply plugin: 'findbugs'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.android.insecurebankv2"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }         
    lintOptions {
        abortOnError false           
    }    
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.google.android.gms:play-services:7.5.0'
    
    
    //Dependencies for FindBugs and FindBugs plugins
    findbugs 'com.google.code.findbugs:findbugs:3.0.1'
    findbugs configurations.findbugsPlugins.dependencies
    findbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.4.4'
}


//task findbugs(type: FindBugs) {
//    ignoreFailures = true
//    effort = "max"
//    reportLevel = "high"
//    classes = fileTree(project.rootDir.absolutePath).include("**/*.class");
//    source fileTree(project.rootDir.absolutePath).include("**/*.java");
//    include '**/*.java'
//    exclude '**/gen/**'
//
//    reports {
//        xml.enabled = true
//        xml {
//            destination "$project.buildDir/reports/findbugs/findbugs.xml"
//            xml.withMessages true
//        }
//    }
//    classpath = files()
//}


//task findbugs(type: FindBugs) {
//    ignoreFailures = false
//    effort = "default"
//    reportLevel = "medium"
//    excludeFilter = new File("${project.rootDir}/findbugs-filter.xml")
//    classes = files("${project.rootDir}/app/build/intermediates/classes")
//    source = fileTree('src/main/java/')
//    classpath = files()
//    ignoreFailures = true
//    reports {
//        xml.enabled = true
//        html.enabled = false
//        xml {
//            destination "$project.buildDir/findbugs/findbugs-output.xml"
//        }
//        html {
//            destination "$project.buildDir/findbugs/findbugs-output.html"
//        }
//    }
//}



//FindBugs task that load security rules only
task findSecurityBugs(type: FindBugs) {

    classes = files("${project.rootDir}/app/build/intermediates/classes")
    source = fileTree('src/main/java/')
    classpath = files()
    pluginClasspath = project.configurations.findbugsPlugins

    findbugs {
        toolVersion = "3.0.1"
        //sourceSets = [android.sourceSets]
        //source fileTree(project.rootDir.absolutePath).include("**/*.java");
        ignoreFailures = true
        reportsDir = file("$project.buildDir/findbugsReports")
        effort = "max"
        reportLevel = "low"
        includeFilter = file("$rootProject.projectDir/fsb-include.xml")
        excludeFilter = file("$rootProject.projectDir/fsb-exclude.xml")
    }
}